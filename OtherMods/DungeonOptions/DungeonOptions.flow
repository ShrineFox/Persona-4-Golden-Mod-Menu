
//
// FlowScript decompiled by AtlusScriptLib by TGE (2017)
// In the unfortunate case of any bugs, please report them back to me.
//

//
// Imports
//

import("OrganizeParty.flow");
import("DungeonTravel.flow");
import("GohoM.flow");
import("Fox.flow");

//
// Script-level variable definitions
//

int stratMask;

// Menu hooks
void entrance_jump_hook()
{
    int var29 = GET_FLOOR_ID();
    int mask = 0;
    if (!EnableOrganizeParty() || !BIT_CHK(6324))
        mask = mask + 4;
    if (!BeatDungeon() || !BIT_CHK(6324))
        mask = mask + 2;
    if (!BIT_CHK(6326) || saveAnywhere())
        mask = mask + 8;
    FUNCTION_0023(0, 3);
    SEL_CHK_PAD(14, 4);
    if (!BIT_CHK(6321))
        SEL_CHK_PAD(12, 18);
    int var27 = ADV_SEL(15, ENTRANCE_SEL_HOOK, mask);

    if (var27 == 0)
    {

        if (GET_MONTH() == 4 && GET_DAY_OF_MONTH() == 17)
        {
            OPEN_MSG_WIN();
            MSG(STOP_RETURN_ENTRANCE);
            CLOSE_MSG_WIN();
        }
        else
        {
            return_tv_studio();
        }
    }
    else if (var27 == 1)
    {
        SelectFloor();
    }
    else if (var27 == 2)
    {
        OrganizeParty();
    }
    else if (var27 == 3)
        NS_SAVE();
    else if (var27 == 18)
    {
        MenuOptions();
        options = true;
    }
    else
        selected = false;
}

// Called mid dungeon
void helper_order_hook()
{
    init_sel_mask();
    sVar9 = 30;

    if (BIT_CHK(0 + 52) == 1)
    {
        sVar8 = 5;

        if (CHECK_TIME_SPAN(6, 13, 10, 9) == 1)
        {
            sVar9 = 20;
        }
    }
    else
    {
        sVar8 = 8;
    }

    if (GET_FLOOR_ID() >= 160 && BIT_CHK(0 + 0x0400 + 0x0800 + 136) == 1)
    {
        BIT_OFF(0 + 0x0400 + 0x0800 + 136);
    }

    sVar7 = NAVI_BU_OPEN(280, -40, sVar8, sVar9);
    OPEN_MSG_WIN();
    helper_dng_order();

_100:
    int var33 = 0;

    // If everything except the strategize and nevermind options are hidden just open the strategize menu
    if (sVar1 == 2046)
    {
        StrategizeMenu();
        goto _101;
    }

    if (1)
    {
        // Set goho-m message variable
        if (GET_FLOOR_ID() > 160 && GET_FLOOR_ID() < 180)
        {
            // Sacred branch (hollow forest)
            SET_MSG_VAR(2, 885, 1);
            SET_MSG_VAR(1, GET_ITEM(885), 0);
        }
        else if (GET_ITEM(790) != 0 || GET_ITEM(2099) == 0)
        {
            // Goho-m + Return Daikon
            SET_MSG_VAR(2, 790, 1);
            SET_MSG_VAR(1, GET_ITEM(790) + GET_ITEM(2099), 0);
        }
        else
        {
            // Return Daikon (if there are no goho-m)
            SET_MSG_VAR(2, 2099, 1);
            SET_MSG_VAR(1, GET_ITEM(2099), 0);
        }
        // Sets mask
        SET_MASK(sVar1);
        if (!BIT_CHK(6321))
            SEL_CHK_PAD(12, 18);
        SEL_CHK_PAD(14, 11);
        var33 = SEL(DUNGEON_SEL_HOOK);

        if (var33 == 0)
        {
            StrategizeMenu();
            goto _101;
        }
        if (var33 == 1)
        {
            talk_member();
            goto _101;
        }
        else if (var33 == 2 || var33 == 3)
        {

            if (var33 >= 2 && var33 <= 3 && GET_FLOOR_ID() < 160)
            {

                if (GET_EQUIPMENT_ID(PartyUnit.Protagonist, 3) != GET_CNT(242) && GET_EQUIPMENT_ID(PartyUnit.Protagonist, 3) != 1792 + 0)
                {
                    CLOSE_MSG_WIN();
                }
                COStalk_SYSSET();

                if (GET_CNT(249) >= 5)
                {
                    CLOSE_MSG_WIN();
                }

                FLD_FUNCTION_0047(var33 + 3, sVar7, sVar8, sVar9);
                FLD_FUNCTION_0048();
            }

            if (BIT_CHK(0 + 0x0400 + 0x0800 + 136) == 0)
            {

                if (var33 == 2)
                {
                    talk_helper_kuma();
                }
                else if (var33 == 3)
                {
                    talk_helper_rise();
                }
            }

            goto _101;
        }
        else if (var33 == 4)
        {
            change_order();
            goto _101;
        }

        else if (var33 == 5)
        {
            CLOSE_MSG_WIN();
            NAVI_BU_CLOSE(sVar7);
            BIT_ON(0 + 0x0400 + 0x0800 + 95);
            goto_stair();
            return;
        }
        else if (var33 == 6 || var33 == 7)
        {
            CLOSE_MSG_WIN();
            NAVI_BU_CLOSE(sVar7);
            BIT_ON(0 + 0x0400 + 0x0800 + 95);
            backto_stair();
            return;
        }
        // Select dungeon floor
        else if (var33 == 8)
        {
            SelectFloor();
            goto _101;
        }
        else if (var33 == 9)
        {
            use_gohom();
            goto _101;
        }
        else if (var33 == 10)
        {
            CLOSE_MSG_WIN();
            NAVI_BU_CLOSE(sVar7);
            NS_SAVE();
            goto _101;
        }
        else if (var33 == 11)
        {
            selected = false;
            goto _101;
        }
        else if (var33 == 18)
        {
            CLOSE_MSG_WIN();
            NAVI_BU_CLOSE(sVar7);
            MenuOptions();
            options = true;
            return;
        }

        goto _100;
    }

_101:
    CLOSE_MSG_WIN();

    if (sVar7 != 0)
    {
        NAVI_BU_CLOSE(sVar7);
    }
}

void StrategizeMenu()
{
    SET_MASK(stratMask);
    SEL_CHK_PAD(14, 6);
    if (!BIT_CHK(6321))
        SEL_CHK_PAD(12, 18);
    int selection = SEL(Strategize);

    if (selection == 0)
    {
        talk_member();
        return;
    }
    else if (selection == 1 || selection == 2)
    {

        if (selection >= 1 && selection <= 2 && GET_FLOOR_ID() < 160)
        {

            if (GET_EQUIPMENT_ID(PartyUnit.Protagonist, 3) != GET_CNT(242) && GET_EQUIPMENT_ID(PartyUnit.Protagonist, 3) != 1792 + 0)
            {
                CLOSE_MSG_WIN();
            }
            COStalk_SYSSET();

            if (GET_CNT(249) >= 5)
            {
                CLOSE_MSG_WIN();
            }

            FLD_FUNCTION_0047(selection + 4, sVar7, sVar8, sVar9);
            FLD_FUNCTION_0048();
        }

        if (BIT_CHK(0 + 0x0400 + 0x0800 + 136) == 0)
        {

            if (selection == 1)
            {
                talk_helper_kuma();
            }
            else if (selection == 2)
            {
                talk_helper_rise();
            }
        }

        return;
    }
    else if (selection == 3)
    {
        change_order();
        return;
    }

    else if (selection == 4)
    {
        OrganizeParty();
        return;
    }
    else if (selection == 5)
    {
        CLOSE_MSG_WIN();
        NAVI_BU_CLOSE(sVar7);
        use_fox();
    }
    else if (selection == 18)
    {
        CLOSE_MSG_WIN();
        NAVI_BU_CLOSE(sVar7);
        MenuOptions();
        options = true;
        return;
    }
}

void init_sel_mask_hook()
{
    bool showDungeonOptions = BIT_CHK(6324);
    bool showFox = BIT_CHK(6330);
    bool showFloorSelect = BIT_CHK(6331);
    bool showGohom = BIT_CHK(6332);
    bool showOrganizeParty = BIT_CHK(6333);
    showFloorSelect = showFloorSelect && BeatDungeon();
    int var34 = GET_FLOOR_ID();
    sVar0 = 0;
    sVar2 = 63;
    sVar3 = 127;
    sVar1 = 0;
    int var35 = 0;
    stratMask = 0;

    // Decide to mask strategize menu
    if (showDungeonOptions)
        sVar1 = sVar1 + 30;
    else
        sVar1 = sVar1 + 1;

_127:

    if (var35 < 3)
    {

        if (GET_PARTY_MEMBER_ID(var35) == 2)
        {
            sVar0 = sVar0 + 1;
            sVar2 = sVar2 - 1;
            sVar3 = sVar3 - 1;
        }
        else if (GET_PARTY_MEMBER_ID(var35) == 3)
        {
            sVar0 = sVar0 + 1;
            sVar2 = sVar2 - 2;
            sVar3 = sVar3 - 2;
        }
        else if (GET_PARTY_MEMBER_ID(var35) == 4)
        {
            sVar0 = sVar0 + 1;
            sVar2 = sVar2 - 4;
            sVar3 = sVar3 - 4;
        }
        else if (GET_PARTY_MEMBER_ID(var35) == 6)
        {
            sVar0 = sVar0 + 1;
            sVar2 = sVar2 - 8;
            sVar3 = sVar3 - 8;
        }
        else if (GET_PARTY_MEMBER_ID(var35) == 7)
        {
            sVar0 = sVar0 + 1;
            sVar2 = sVar2 - 0x10;
            sVar3 = sVar3 - 0x10;
        }
        else if (GET_PARTY_MEMBER_ID(var35) == 8)
        {
            sVar0 = sVar0 + 1;
            sVar2 = sVar2 - 0x20;
            sVar3 = sVar3 - 0x20;
        }

        var35 = var35 + 1;
        goto _127;
    }

    // No party members
    if (sVar0 == 0)
    {
        // Hide talk to others and change battle tactics
        // 2 + 16
        if (!showDungeonOptions)
            sVar1 = sVar1 + 18;
        else
            stratMask = stratMask + 9;

        if (BIT_CHK(0 + 52) == 1)
        {
            if (!showDungeonOptions)
                sVar1 = sVar1 + 4;
            else
                stratMask = stratMask + 2;
        }
        else
        {
            if (!showDungeonOptions)
                sVar1 = sVar1 + 8;
            else
                stratMask = stratMask + 4;
        }
    }
    else
    {
        // Hide Talk to teddie and rise
        // 4 + 8
        if (!showDungeonOptions)
            sVar1 = sVar1 + 12;
        else
            stratMask = stratMask + 6;

        if (BIT_CHK(0 + 52) == 1)
        {
            sVar3 = sVar3 - 0x40;
        }
        else
        {
            sVar3 = sVar3 - 0x20;
        }
    }

    // Hide Go to next floor if floor select is shown
    if (FLD_FUNCTION_0036() == 0 || showFloorSelect == true)
    {
        sVar1 = sVar1 + 32;
    }

    // Mask return to previous floor and entrance
    sVar1 = sVar1 + 192;

    // Keep Return to previous floor/entrance hidden if floor select is shown
    if (FLD_FUNCTION_0037() == 1 && showFloorSelect == false)
    {
        // Unmask entrance
        if (var34 == 6 || var34 == 21 || var34 == 41 || var34 == 61 || var34 == 81 || var34 == 101 || var34 == 121 || var34 == 123 || var34 == 141 || var34 == 161)
        {
            sVar1 = sVar1 - 128;
        }
        // Unmask floor
        else
        {
            sVar1 = sVar1 - 64;
        }
    }

    // Hide floor select
    if (!showFloorSelect || !BIT_CHK(6324))
        sVar1 = sVar1 + 256;
    // Hide Goho-M
    if (!showGohom || showFloorSelect || !BIT_CHK(6324) ||
        (FLD_FUNCTION_0037() == 1 &&
         (var34 == 6 || var34 == 21 || var34 == 41 || var34 == 61 || var34 == 81 || var34 == 101 || var34 == 121 || var34 == 123 || var34 == 141 || var34 == 161)))
        sVar1 = sVar1 + 512;
    // Hide OrganizeParty
    if (!EnableOrganizeParty() || !showOrganizeParty || !BIT_CHK(6324))
        stratMask = stratMask + 16;
    // Hide Call Fox
    if (BIT_CHK(0 + 0x0400 + 0x0800 + 9) == 0 || !showFox || !BIT_CHK(6324) || (GET_FLOOR_ID() > 160 && GET_FLOOR_ID() < 180))
        stratMask = stratMask + 32;
    if (!BIT_CHK(6326) || saveAnywhere())
        sVar1 = sVar1 + 1024;
}

void tomb_jump_hook()
{
    int var24 = 0;
    int var25 = 0;
    var24 = var24 + 1 + 4 + 8;
    var24 = var24 + 0x20;
    if (!EnableOrganizeParty() || !BIT_CHK(6324))
        var24 = var24 + 2;
    if (!BIT_CHK(6326) || saveAnywhere())
        var24 = var24 + 64;
    FUNCTION_0023(0, 3);
    SEL_CHK_PAD(14, 7);
    if (!BIT_CHK(6321))
        SEL_CHK_PAD(12, 18);
    int var23 = ADV_SEL(12, TOMB_SEL_HOOK, var24);

    if (var23 == 0 || var23 == 2 || var23 == 3 || var23 == 4)
    {
        FADE(1, 10);

        if (var23 == 4)
        {
            FUNCTION_0024(255, 255, 255);
        }

        FADE_SYNC();
        FLD_FUNCTION_0024();

        if (var23 == 0)
        {
            BIT_OFF(0 + 0x0400 + 0x0800 + 2);
            CALL_DUNGEON(1, 0);
            return;
        }
        else if (var23 == 2)
        {
            DAIDARA_SHOP();
        }
        else if (var23 == 3)
        {
            SHIROKU_SHOP();
        }
        else if (var23 == 4)
        {
            var25 = 3;
            VELVET_ROOM();
            BIT_OFF(0 + 0x0400 + 719);
        }

        CALL_DUNGEON(160, var25);
    }
    else if (var23 == 5)
    {
        OPEN_MSG_WIN();
        MSG(RETURN_HOME_OK);
        SEL_CHK_PAD(14, 1);
        var23 = SEL(YESNO_SEL);
        CLOSE_MSG_WIN();

        if (var23 == 0)
        {
            OPEN_MSG_WIN();
            MSG(KUMA_BYE_TOMB);
            CLOSE_MSG_WIN();
            FADE(1, 10);
            FADE_SYNC();
            out_tv_world();
            return;
        }
    }
    else if (var23 == 1)
    {
        OrganizeParty();
    }
    else if (var23 == 6)
        NS_SAVE();
    else if (var23 == 18)
    {
        MenuOptions();
        options = true;
    }
    else
        selected = false;
}

void liqueur_jump_hook()
{
    FUNCTION_0023(0, 3);
    int mask = 0;
    if (!EnableOrganizeParty() || !BIT_CHK(6324))
        mask = mask + 2;
    if (!BIT_CHK(6326) || saveAnywhere())
        mask = mask + 4;
    SEL_CHK_PAD(14, 3);
    if (!BIT_CHK(6321))
        SEL_CHK_PAD(12, 18);
    int var26 = ADV_SEL(15, LIQUEUR_SEL_HOOK, mask);

    if (var26 == 0)
    {
        return_tv_studio();
    }
    else if (var26 == 1)
        OrganizeParty();
    else if (var26 == 2)
        NS_SAVE();
    else if (var26 == 18)
    {
        MenuOptions();
        options = true;
    }
    else
        selected = false;
}

void studio_jump_hook()
{
    int var22 = 0;
    int var21 = 0;

    if (DATE_CHK(2, 13) == 1 || DATE_CHK(3, 20) == 1)
    {
        var21 = var21 + 0x10;
        var21 = var21 + 1;
        var21 = var21 + 2 + 4;
    }
    else
    {
        var21 = var21 + 1 + 2 + 4;
    }

    if (BIT_CHK(0 + 0x0400 + 0x0800 + 0) == 0)
    {
        var21 = var21 + 128;
    }

    if (!BIT_CHK(6326) || saveAnywhere())
        var21 = var21 + 32;

    FUNCTION_0023(0, 3);
    SEL_CHK_PAD(14, 6);
    if (!BIT_CHK(6321))
        SEL_CHK_PAD(12, 18);
    int var20 = ADV_SEL(3, SHOP_SEL_HOOK, var21);

    if (var20 == 0 || var20 == 1 || var20 == 2 || var20 == 3)
    {
        FADE(1, 10);

        if (var20 == 3)
        {
            FUNCTION_0024(255, 255, 255);
        }

        FADE_SYNC();
        FLD_FUNCTION_0024();

        if (var20 == 0)
        {
            BIT_OFF(0 + 0x0400 + 0x0800 + 2);
            CALL_DUNGEON(160, 0);
            return;
        }
        else if (var20 == 1)
        {
            DAIDARA_SHOP();
        }
        else if (var20 == 2)
        {
            SHIROKU_SHOP();
        }
        else if (var20 == 3)
        {
            var22 = 1;
            VELVET_ROOM();
            BIT_OFF(0 + 0x0400 + 719);
        }

        CALL_DUNGEON(1, var22);
    }
    else if (var20 == 4)
    {

        if (BIT_CHK(0 + 0x0400 + 0x0800 + 6) == 0)
        {
            HELP_MSG(4);
        }

        OPEN_MSG_WIN();
        MSG(RETURN_HOME_OK);
        SEL_CHK_PAD(14, 1);
        var20 = SEL(YESNO_SEL);
        CLOSE_MSG_WIN();

        if (var20 == 0)
        {

            if (BIT_CHK(0 + 0x0400 + 0x0800 + 6) == 0)
            {
                BIT_ON(0 + 0x0400 + 0x0800 + 6);
            }

            OPEN_MSG_WIN();

            if (CHECK_TIME_SPAN(4, 1, 7, 9) == 1)
            {
                MSG(KUMA_BYE_1);
            }
            else if (CHECK_TIME_SPAN(11, 6, 12, 7) == 1)
            {

                if (BIT_CHK(0 + 22) == 0)
                {
                    MSG(KUMA_BYE_3);
                }
                else if (BIT_CHK(0 + 22) == 1)
                {
                    MSG(KUMA_BYE_4);
                }
            }
            else
            {
                MSG(KUMA_BYE_2);
            }

            CLOSE_MSG_WIN();
            FADE(1, 10);
            FADE_SYNC();
            out_tv_world();
            TV_STUDIO();
        }
    }
    else if (var20 == 5)
        NS_SAVE();
    else if (var20 == 6)
        selected = false;
    else if (var20 == 7)
    {
        SEL_CHK_PAD(14, 2);
        var20 = ADV_SEL(502, 503, 0);

        if (var20 == 0)
        {
            FADE(1, 10);
            FUNCTION_0024(255, 255, 255);
            FADE_SYNC();
            CALL_DUNGEON(159, 0);
        }
        else if (var20 == 1)
        {
            FADE(1, 10);
            FADE_SYNC();
            CALL_DUNGEON(160, 0);
        }
    }
    else if (var20 == 18)
    {
        MenuOptions();
        options = true;
    }
}
