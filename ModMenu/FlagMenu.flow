int Flag_Menu()
{
	while(true)
	{
		SEL_CHK_PAD(14, 17);
		SEL_CHK_PAD(15, 18);
		int flag = ADV_SEL(Flag_Menu_Text, Flag_Menu, 0);
		switch (flag) 
		{
			case 0:
				ToggleBit();
				break;
			case 1:
				ToggleBitRange();
				break;
			case 2:
				EditCount();
				break;
			case 3:
				EditMemory();
				break;
			case 4:
				KillQuests();
				break;
			case 5:
				ReviveQuests();
				break;
			case 6:
				TurnOffTiredFlags();
				break;
			case 7:
				UnlockMap();
				break;
			case 8:
				ToggleHUD();
				break;
			case 17:
				return -1;
			case 18:
				return 0;
		}
	}
	return 0;
}

void ToggleHUD()
{
	SEL_CHK_PAD(14,2);
	int toggle = ADV_SEL(OnOff_Text, OnOff, 0);
	if (toggle == 0)
		SHOW_DATE(1);
	else if (toggle == 1)
		SHOW_DATE(0);
}

void TurnOffTiredFlags()
{
	BIT_OFF( 0 + 0x0400 + 0x0800 + 2 );
	BIT_OFF( 2750 );
}

void UnlockMap()
{
	BIT_ON( 0 + 0x0400 + 0x0800 + 173 );
	BIT_OFF( 0 + 0x0400 + 0x0800 + 176 );
	BIT_ON( 0 + 0x0400 + 0x0800 + 174 );
	SET_CNT( 62, 3 );
	BIT_OFF( 0 + 0x0400 + 0x0800 + 181 );
	BIT_ON( 0 + 0x0400 + 0x0800 + 180 );
	SET_CNT( 63, 3 );
	BIT_ON( 0 + 0x0400 + 0x0800 + 179 );
	BIT_ON( 0 + 0x0400 + 0x0800 + 0x0400 + 0x0200 + 0x0200 + 0x0200 + 85 );
	BIT_OFF( 0 + 0x0400 + 0x0800 + 177 );
	BIT_ON( 0 + 0x0400 + 0x0800 + 175 );
}

void EditCount()
{
	int countNumber = Get_Number(3, MSG_3);
	if (countNumber == -1)
		return;
	SET_MSG_VAR(0, countNumber, 0);
	SET_MSG_VAR(1, GET_CNT(countNumber), 0);
	OPEN_MSG_WIN();
	MSG(CountIndicator);
	CLOSE_MSG_WIN();
	int newValue = Get_Number(5, MSG_5);
	if (newValue != -1)
		SET_CNT(countNumber, newValue);
}

void EditMemory() 
{
	// Get the location
	int op = ADV_SEL(Operation, PlusOrMinus, 0);
	int location = Get_Number(6, MSG_6_Location);
	if(location == -1)
		return;
	if (op) location *= -1;
	// Get the number of bytes
	int numBytes = Get_Number(2, MSG_2_Bytes);
	int foundNumber = ReadNumber(location, numBytes);
	SET_MSG_VAR(0, location, 0);
	SET_MSG_VAR(1, foundNumber, 0);
	OPEN_MSG_WIN();
	MSG(NumberIndicator);
	CLOSE_MSG_WIN();
}

void ToggleBit()
{
	int major = Get_Number(4, MSG_4);
	if (major == -1)
		return;
	SET_MSG_VAR(0, major, 0);
	SET_MSG_VAR(1, 619 + BIT_CHK(major), 6);
	OPEN_MSG_WIN();
	MSG(FlagIndicator);
	SEL_CHK_PAD(14,2);
	int toggle = SEL(OnOff);
	CLOSE_MSG_WIN();
	if (toggle == 0)
	{
		BIT_ON(major);
	}
	else if (toggle == 1)
	{
		BIT_OFF(major);
	}
}

void ToggleBitRange()
{
	int major = Get_Number(4, MSG_4_Major);
	if (major == -1)
		return;
	int minor = Get_Number(4, MSG_4_Minor);
	if (minor == -1)
		return;
	int i = major;
	SEL_CHK_PAD(14,2);
	int toggle = ADV_SEL(OnOff_Text, OnOff, 0);
	if (toggle == 0)
	{
		while (i <= minor)
		{
			BIT_ON(i);
			i++;
		}
	}
	else if (toggle == 1)
	{
		while (i <= minor)
		{
			BIT_OFF(i);
			i++;
		}
	}
}

void KillQuests()
{
	int var149 = 0 + 0x0100;
	_1208:
	
	if ( 1 )
	{
		BIT_ON( var149 );
		var149 = var149 + 1;
		
		if ( var149 > 0 + 447 )
		{
			goto _1209;
		}

		goto _1208;
	}

	_1209:
	var149 = 0 + 0x0400 + 0x0800 + 0x0400 + 0x0200 + 0x0200 + 0x0200 + 768;
	_1212:
	
	if ( 1 )
	{
		BIT_ON( var149 );
		var149 = var149 + 1;
		
		if ( var149 > 0 + 0x0400 + 0x0800 + 0x0400 + 0x0200 + 0x0200 + 0x0200 + 863 )
		{
			goto _1213;
		}

		goto _1212;
	}

	_1213:
	BIT_OFF( 0 + 306 );
	BIT_OFF( 0 + 307 );
	BIT_OFF( 0 + 308 );
	BIT_OFF( 0 + 309 );
	BIT_OFF( 0 + 310 );
	BIT_OFF( 0 + 370 );
	BIT_OFF( 0 + 371 );
	BIT_OFF( 0 + 372 );
	BIT_OFF( 0 + 373 );
	BIT_OFF( 0 + 374 );
	BIT_OFF( 0 + 434 );
	BIT_OFF( 0 + 435 );
	BIT_OFF( 0 + 436 );
	BIT_OFF( 0 + 437 );
	BIT_OFF( 0 + 438 );
}

void ReviveQuests()
{
	int var149 = 0 + 0x0100;
	_1216:
	
	if ( 1 )
	{
		BIT_OFF( var149 );
		var149 = var149 + 1;
		
		if ( var149 > 0 + 447 )
		{
			goto _1217;
		}

		goto _1216;
	}

	_1217:
	var149 = 0 + 0x0400 + 0x0800 + 0x0400 + 0x0200 + 0x0200 + 0x0200 + 768;
	_1220:
	
	if ( 1 )
	{
		BIT_OFF( var149 );
		var149 = var149 + 1;
		
		if ( var149 > 0 + 0x0400 + 0x0800 + 0x0400 + 0x0200 + 0x0200 + 0x0200 + 863 )
		{
			goto _1221;
		}

		goto _1220;
	}

	_1221:
}